{"version":3,"sources":["webpack://js_project_skeleton/./src/scripts/node.js","webpack://js_project_skeleton/./src/scripts/board.js","webpack://js_project_skeleton/./src/index.js"],"names":["row","col","this","mouseDown","isStart","isFinish","addClass","className","document","getElementById","el","maxRow","maxCol","grid","myPath","board","createBoard","addEventListeners","buttonsOn","previous","nodeClicked","boardRow","newEleRow","createElement","appendChild","newEleNode","setAttribute","node","Node","push","currentId","currentNode","getNode","currentElement","addEventListener","e","preventDefault","includes","id","coordinates","split","parseInt","Board"],"mappings":"+LAAA,IAoCA,E,WA9BE,WAAYA,EAAKC,I,4FAAK,SACpBC,KAAKF,IAAMA,EACXE,KAAKD,IAAMA,EACXC,KAAKC,WAAY,EACjBD,KAAKE,QAAUF,KAAKE,UACpBF,KAAKG,SAAWH,KAAKG,W,4CAGvB,WACE,OAfmB,KAefH,KAAKF,KAdU,KAcgBE,KAAKD,MACtCC,KAAKI,SAAS,eACP,K,sBAKX,WACE,OArBoB,KAqBhBJ,KAAKF,KApBW,KAoBgBE,KAAKD,MACvCC,KAAKI,SAAS,gBACP,K,sBAKX,SAASC,GACOC,SAASC,eAAT,UAA2BP,KAAKF,IAAhC,YAAuCE,KAAKD,MAClDM,WAAR,WAAyBA,Q,gMCwE7B,E,WApGE,WAAYG,I,4FAAI,SACdR,KAAKQ,GAAKA,EACVR,KAAKS,OAAS,GACdT,KAAKU,OAAS,GACdV,KAAKW,KAAO,GACZX,KAAKY,OAAS,GACdZ,KAAKa,MAAQb,KAAKc,cAClBd,KAAKe,oBACLf,KAAKgB,WAAY,EACjBhB,KAAKiB,SAAW,KAChBjB,KAAKkB,YAAc,K,gDAGrB,WACE,IAAK,IAAIpB,EAAM,EAAGA,EAAME,KAAKS,OAAQX,IAAO,CAC1C,IAAIqB,EAAW,GACXC,EAAYd,SAASe,cAAc,OACvCD,EAAUf,UAAY,WACtBL,KAAKQ,GAAGc,YAAYF,GAEpB,IAAK,IAAIrB,EAAM,EAAGA,EAAMC,KAAKU,OAAQX,IAAO,CAC1C,IAAIwB,EAAajB,SAASe,cAAc,OACxCE,EAAWlB,UAAY,OACvBkB,EAAWC,aAAa,KAAxB,UAAiC1B,EAAjC,YAAwCC,IACxCqB,EAAUE,YAAYC,GACtB,IAAIE,EAAO,IAAIC,EAAK5B,EAAKC,GACzBoB,EAASQ,KAAKF,GAGhBzB,KAAKW,KAAKgB,KAAKR,M,+BAInB,WAEE,IADA,IAAIN,EAAQb,KACHF,EAAM,EAAGA,EAAMe,EAAMJ,OAAQX,IACpC,IAD2C,eAClCC,GACP,IAAI6B,EAAY,GAAH,OAAM9B,EAAN,YAAaC,GACtB8B,EAAchB,EAAMiB,QAAQF,GAC5BG,EAAiBzB,SAASC,eAAeqB,GAE7CG,EAAeC,iBAAiB,aAAa,SAASC,GACpDA,EAAEC,kBACEL,EAAY3B,SAAW2B,EAAY5B,aACrC4B,EAAY5B,WAAY,EACxBY,EAAMG,WAAY,EAClBH,EAAMK,YAAca,EACflB,EAAMD,OAAOuB,SAASN,IACzBhB,EAAMD,OAAOe,KAAKE,OAKxBE,EAAeC,iBAAiB,cAAc,SAASC,GACjDpB,EAAMG,YACRa,EAAY5B,WAAY,EAInBY,EAAMD,OAAOuB,SAASN,KAC3BhB,EAAMD,OAAOe,KAAKE,GAChBE,EAAe1B,WAAa,gBAKlC0B,EAAeC,iBAAiB,cAAe,SAASC,GAClDpB,EAAMG,YACRH,EAAMI,SAAWc,MAKrBA,EAAeC,iBAAiB,WAAW,SAASC,GAC9CpB,EAAMG,YACRH,EAAMI,SAAWc,EACjBlB,EAAMG,WAAY,OAxCfjB,EAAM,EAAGA,EAAMc,EAAMH,OAAQX,IAAO,EAApCA,K,qBAkDb,SAAQqC,GACN,IAAIC,EAAcD,EAAGE,MAAM,KACvBxC,EAAMyC,SAASF,EAAY,IAC3BtC,EAAMwC,SAASF,EAAY,IAC/B,OAAOrC,KAAKW,KAAKb,GAAKC,Q,sBC1F1BO,SAAS0B,iBAAiB,oBAAoB,WAC5C,IAAMxB,EAAKF,SAASC,eAAe,QAEnC,IAAIiC,EAAMhC,M","file":"main.js","sourcesContent":["const START_NODE_ROW = 10;\nconst START_NODE_COL = 15;\nconst FINISH_NODE_ROW = 10;\nconst FINISH_NODE_COL = 25;\n\nclass Node {\n  constructor(row, col) {\n    this.row = row;\n    this.col = col;\n    this.mouseDown = false;\n    this.isStart = this.isStart();\n    this.isFinish = this.isFinish();\n  }\n\n  isStart() {\n    if (this.row === START_NODE_ROW && this.col === START_NODE_COL) {\n      this.addClass(\"node-start\");\n      return true\n    };\n    return false;\n  }\n\n  isFinish() {\n    if (this.row === FINISH_NODE_ROW && this.col === FINISH_NODE_COL) {\n      this.addClass(\"node-finish\");\n      return true\n    };\n    return false;\n  }\n\n  addClass(className) {\n    let nodeEle = document.getElementById(`${this.row}-${this.col}`)\n    nodeEle.className += ` ${className}`;\n  }\n}\n\nexport default Node;","import Node from './node';\n\n\nclass Board {\n  constructor(el) {\n    this.el = el;\n    this.maxRow = 20;\n    this.maxCol = 50;\n    this.grid = [];\n    this.myPath = [];\n    this.board = this.createBoard();\n    this.addEventListeners();\n    this.buttonsOn = false;\n    this.previous = null;\n    this.nodeClicked = null;\n  }\n\n  createBoard() {\n    for (let row = 0; row < this.maxRow; row++) {\n      let boardRow = [];\n      let newEleRow = document.createElement(\"div\");\n      newEleRow.className = \"node-row\";\n      this.el.appendChild(newEleRow);\n\n      for (let col = 0; col < this.maxCol; col++) {\n        let newEleNode = document.createElement(\"div\");\n        newEleNode.className = \"node\";\n        newEleNode.setAttribute(\"id\", `${row}-${col}`)\n        newEleRow.appendChild(newEleNode);\n        let node = new Node(row, col)\n        boardRow.push(node)\n      }\n\n      this.grid.push(boardRow)\n    }\n  }\n\n  addEventListeners() {\n    let board = this;\n    for (let row = 0; row < board.maxRow; row++) {\n      for (let col = 0; col < board.maxCol; col++) {\n        let currentId = `${row}-${col}`;\n        let currentNode = board.getNode(currentId);\n        let currentElement = document.getElementById(currentId);\n\n        currentElement.addEventListener(\"mousedown\", function(e) {\n          e.preventDefault();\n          if (currentNode.isStart || currentNode.mouseDown) {\n            currentNode.mouseDown = true;\n            board.buttonsOn = true\n            board.nodeClicked = currentElement;\n            if (!board.myPath.includes(currentNode)) {\n              board.myPath.push(currentNode);\n            }\n          }\n        });\n            \n        currentElement.addEventListener(\"mouseenter\", function(e) {\n          if (board.buttonsOn) {\n            currentNode.mouseDown = true;\n            // board.nodeClicked = currentElement;\n            // debugger\n\n            if (!board.myPath.includes(currentNode)) {  //board.previous === board.nodeClicked\n            board.myPath.push(currentNode);\n              currentElement.className += \" clicked\";\n            }\n          }\n        });\n\n        currentElement.addEventListener(\"mouseleave\" , function(e) {\n          if (board.buttonsOn) {\n            board.previous = currentElement;\n          }\n        })\n\n\n        currentElement.addEventListener(\"mouseup\", function(e) {\n          if (board.buttonsOn) {\n            board.previous = currentElement;\n            board.buttonsOn = false;\n            // board.nodeClicked = currentElement;   \n          }\n          debugger\n        });\n\n      }\n    }\n  }\n\n  getNode(id) {\n    let coordinates = id.split(\"-\");\n    let row = parseInt(coordinates[0]);\n    let col = parseInt(coordinates[1]);\n    return this.grid[row][col];\n  };\n\n  // appendElementToDom(className, parent=this.el) {\n  //   let child = document.createElement(\"div\");\n  //   child.className = className;\n  //   parent.appendChild(child);\n  // }\n}\n\nexport default Board;","import \"./styles/index.scss\";\nimport Board from \"./scripts/board\"\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  const el = document.getElementById(\"grid\")\n\n  new Board(el)\n  \n})\n\n\n"],"sourceRoot":""}